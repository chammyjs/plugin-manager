/*! @chammy/plugin-manager v0.0.0 | (c) 2017 Chammy.js | MIT license (see LICENSE) */'use strict';function _interopDefault(a){return a&&'object'==typeof a&&'default'in a?a['default']:a}var pluginHelper=require('@chammy/plugin-helper'),glob=_interopDefault(require('glob'));function isString(a){return'string'==typeof a}function makeGlobPromise(a,b){return new Promise(function(c,d){glob(a,{cwd:b,absolute:!0},function(a,b){a&&d(a),c(b)})})}var asyncGenerator=function(){function a(a){this.value=a}function b(b){function c(e,f){try{var g=b[e](f),h=g.value;h instanceof a?Promise.resolve(h.value).then(function(a){c('next',a)},function(a){c('throw',a)}):d(g.done?'return':'normal',g.value)}catch(a){d('throw',a)}}function d(a,b){'return'===a?e.resolve({value:b,done:!0}):'throw'===a?e.reject(b):e.resolve({value:b,done:!1});e=e.next,e?c(e.key,e.arg):f=null}var e,f;this._invoke=function(a,b){return new Promise(function(d,g){var h={key:a,arg:b,resolve:d,reject:g,next:null};f?f=f.next=h:(e=f=h,c(a,b))})},'function'!=typeof b.return&&(this.return=void 0)}return'function'==typeof Symbol&&Symbol.asyncIterator&&(b.prototype[Symbol.asyncIterator]=function(){return this}),b.prototype.next=function(a){return this._invoke('next',a)},b.prototype.throw=function(a){return this._invoke('throw',a)},b.prototype.return=function(a){return this._invoke('return',a)},{wrap:function(a){return function(){return new b(a.apply(this,arguments))}},await:function(b){return new a(b)}}}(),classCallCheck=function(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')},createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),PluginManager$1=function(){function a(){classCallCheck(this,a),this.plugins=new Set}return createClass(a,[{key:'find',value:function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:process.cwd();if(!isString(a)&&(!Array.isArray(a)||!a.every(isString)))throw new TypeError('pattern parameter must be a string or an array of strings');if(!isString(b))throw new TypeError('path parameter must be a string');isString(a)&&(a=[a]);var c=a.map(function(a){return makeGlobPromise(a,b)});return Promise.all(c).then(function(a){return a.reduce(function(a,b){return a.concat(b)},[])})}},{key:'load',value:function(a){var b=this;if(!Array.isArray(a)||!a.every(isString))throw new TypeError('Parameter must be an array of strings');var c=a.map(function(a){var c=require(a);return Reflect.getPrototypeOf(c)===pluginHelper.Plugin?(b.plugins.add(c),c):Promise.reject(new TypeError('Plugins must extend Plugin class'))});return Promise.all(c)}},{key:'findAndLoad',value:function(a){var b=this,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:process.cwd();return this.find(a,c).then(function(a){return b.load(a)})}},{key:Symbol.iterator,value:function(){return this.plugins[Symbol.iterator]()}}]),a}();module.exports=PluginManager$1;
//# sourceMappingURL=plugin-manager.js.map
